#import "../conf.typ": *
#import "@preview/physica:0.7.5": *
#import "@preview/tablex:0.0.5": tablex, rowspanx, colspanx

// #let py = toml("data.toml")
#let py = loadpy(toml("data.toml"))

#show: conf.with(
  title: "Определение моментов инерции твердых тел с помощью трифилярного подвеса",
  number: "1.2.3",
  date: "22 сентября 2023 г.",
)

= Цели и задачи
- измерение момента инерции ряда тел и сравнение резальтатов с расчётами по теоретическим формалам
- проверка аддитивности моментов инерции и справедливости формулы Гюйгенса--Штейнера.

= Оборудование
- трифилярный подвес, счётчик числа колебаний, набор тел, момент инерции которых принадлежит измерить (диск, стержень, полый цилиндр и другие).

/ Секундомер: $Delta_"сек" = 0.01" с"$
/ Линейка: $Delta_"лин" = 0.05 "см"$
/ Штангенциркуль: $Delta_"шт" = 0.01 "см"$

#let epssum(..sink) = {
  let args = sink.pos()
  let sum = args.map(i => {
    if type(i) == array {
      $#i.at(0) ((Delta #i.at(1))/#i.at(1))^2$
    } else {
      $((Delta #i)/#i)^2$
    }
  }).join($+$)
  $sqrt(#sum)$
}

// $ sigma = epssum(a, c, 123) $

// #let make_dI() = {
//   $sqrt(((Delta k)/k)^2+((Delta m)/m)^2+2((Delta T)/T)^2)$
// }

// #let make_I() = {
//   $k m T^2$
// }

= Теория
Момент инерции:
$ I = integral r^2 dif m. $
// $ (I dot(phi)^2)/2 - m g (z_0 - z) = E. $
// $ (R cos phi - r)^2 + R^2 sin^2 phi + z^2 = L^2. $
// $ z^2 = L^2 - R^2 - r^2 + 2 R r cos phi = z_0^2 - 2 R r (1 - cos phi) approx z_0^2 - R r phi^2. $
Формула момента инерции подвеса с грузом:
$ I = k m T^2, "где" k = (g R r)/(4 pi^2 z_0) $

#{
  set math.equation(numbering: none)
  figure(table(
    columns: (1fr, 1fr),
    [Кольцо], $ I_"к" = m_"к" (R_"внут"^2 + R_"внеш"^2)/2 $,
    [Диск], $ I_"д" = (m_"д" R_"д"^2)/2 $,
    [Горизонтальный брусок], $ I_"бр" = m_"бр"/12 (w^2 + h^2) $,
    [Вертикальный брусок], $ I_"бр" = m_"бр"/6 w^2 $
  ), caption: [Моменты инерций тел])
}

Погрешности рассчитываются по формуле:
$ Delta f = sqrt(sum_i (pdv(f, x_i) Delta x_i)^2) $

#set math.equation(numbering: none)
= Результаты измерений

Измерим параметры установки.

#figure(
  table(columns: 2,
    [Длина нитей $H$], py.H.r,
    [Радиус подвеса $R$], py.R.r,
    [Радиус верхнего диска $r$],py.r.r ,
    [Масса подвеса $m$],py.mm.r,
    [Радиус нижнего диска $R_k$],py.Rk.r
  ), caption: [Параметры установки]
)

Рассчитаем некоторые параметры установки:
$
"Высота подвеса" z_0 &= sqrt(H^2 - R_k^2) = #py.z0.r \
"" Delta k &= k epssum(R, r, z_0) = #py.kk.s \
"" k &= (g R r)/(4 pi^2 z_0) = #py.kk.r
$


#let r = py.df.remove("раздв диск")

#let make_table(k, v) = {
  figure(table(
    columns: 2,
    align: center + horizon,
    inset: 3pt,
    $N$, $t, "c."$,
    ..v.map(((n, t)) => (n, f(t, 3))).flatten().map(m)
  ), caption: k)
}

Проведём измерения периода колебаний для различных тел.

#pagebreak(weak: true)
== Измерения колебаний
#grid(columns: 2,
  grid(
    gutter: 6pt,
    make_table([Измерения момента инерции подвеса], py.df.at("подвес")),
    make_table([Измерения момента инерции кольца], py.df.at("кольцо")),
    make_table([Измерения момента инерции диска], py.df.at("диск")),
make_table([Измерения момента инерции кольца и диска], py.df.at("кольцо+диск")),
make_table([Измерения момента инерции\ бруска в горизонтальном положении], py.df.at("брусок горизонт")),
  ),
  grid(
    gutter: 6pt,
    [#figure(table(
      columns: 3,
      inset: 3pt,
      $N$, $t, "с."$, $Delta h, "см"$,
      ..r.map(((n, t, h)) => (n, f(t, 3), f(h, 1))).flatten().map(m)
    ), caption: [Измерения раздвижного диска]) <sepdisk>],
    make_table([Измерения момента инерции\ бруска в вертикальном положении], py.df.at("брусок вертик"))
  )
)
#pagebreak(weak: true)

== Моменты инерций
Формула момента инерции подвеса с грузом:
$ I = k m T^2 $
Момент инерции тела:

$ I = k m_Sigma T^2 - I_"под" $

=== Подвес
$ I_"под" = k m T^2 = #py.I.r $

Теоретическое значение:
$ I'_"под" = m R_k^2 = #py.I1.r $

=== Кольцо
$ I_"к" = k m_Sigma T^2 - I_"под" = #py.Im.at(1).r $

Теоретическое значение:
$ I'_"к" = m_"к" (R_"внут"^2 + R_"внеш"^2)/2 = #py.I_ring.r $

=== Диск
$ I_"д" = k m_Sigma T^2 - I_"под" = #py.Im.at(2).r $

Теоретическое значение:
$ I'_"д" = (m_"д" R_"д"^2)/2 = #py.Id.r $

=== Кольцо + диск
$ I_"кд" = k m_Sigma T^2 - I_"под" = #py.Im.at(3).r $

Теоретические значение:
$ I'_"кд" = I_"к" + I_"д" = #py.I_d_ring.r $

=== Брусок
$ I_"бр гор" = k m_Sigma T^2 - I_"под" = #py.Im.at(4).r $
$ I_"бр верт" = k m_Sigma T^2 - I_"под" = #py.Im.at(5).r $

Теоретическое значения:
$ I'_"бр гор" = m_"бр"/12 (w^2 + h^2) = #py.Ib_hor.r  $
$ I'_"бр верт" = m_"бр"/6 w^2 = #py.Ib_vert.r $

Все значения в пределах погрешности совпадают с теоретическими.

// #make_table([Измерения момента инерции подвеса], py.df.at("подвес"))
// Экспериментальный момент инерции:
// $ expval(T) = #f(py.Tm.at(0), 2)" с" $
// $ sigma_T = stderr(T) = #f(py.dTm.at(0),2)" с" $
// $ Delta I_0 = epssum(k, m, #(2, $T$)) = 0.0001 "кг"dot"м"^2 $
// $ I_0 = k m T^2 = #f(py.I,4) "кг"dot"м"^2 $
// Что в пределах погрешности совпадает с теоретическим значением:
// $ I_0 = m R_"к"^2 = #f(py.I1, 4) "кг"dot"м"^2 $
// #make_table([Измерения момента инерции кольца], py.df.at("кольцо"))
// Экспериментальный момент инерции:
// $ expval(T) = #f(py.Tm.at(1), 3)" с" $
// $ sigma_T = stderr(T) = #f(py.dTm.at(1),3)" с" $
// $ Delta I_0 = epssum(k, m, #(2, $T$)) = 0.0001 "кг"dot"м"^2 $
// $ I = k m T^2 = #f(py.I_ring/10000000,4) "кг"dot"м"^2 $
// Что в пределах погрешности совпадает с теоретическим значением:
// $ I = m R_"к"^2 = #f(py.I1, 4) "кг"dot"м"^2 $
// #make_table([Измерения момента инерции диска], py.df.at("диск"))
// #make_table([Измерения момента инерции кольца и диска], py.df.at("кольцо+диск"))
// #make_table([Измерения момента инерции\ бруска в горизонтальном положении], py.df.at("брусок горизонт"))
// #make_table([Измерения момента инерции подвеса], py.df.at("брусок вертик"))


== Раздвижные диски
Построим зависимость $I(h^2)$ по @sepdisk[таблице], где $I_"п" = k m T^2 - I_"под", d = Delta h - 0.5 "см"$.

#figure(
  image("p7.svg", width: 70%),
  caption: [График зависимости $I$ от $d^2$]
)

$ I(d) = I_"п" + m_"п" d^2 $
Используя метод $chi^2$, найдём коэффиценты прямой:
$ I_"п" = #py.b.r $
$ m = #py.k.r $

Что близко соответствует массе половинок и теоретическому значению момента инерции:
$ m_"п" = #py.mp.r $
$ I'_"п" = (m_"п" R_"п"^2)/2 = #py.Ipp.r $

Следовательно, закон Гюйгенса--Штейнера выполняется.

= Вывод

С помощью трифилярного подвеса мы определили моменты инерции различных тел с высокой точностью и сравнили их с теоретическими значениями.

Также, мы доказали аддитивность моментов инерции.

Была показана справедливость формулы Гюйгенса--Штейнера.